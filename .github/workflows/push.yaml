name: Deploy #Workflow name
run-name: Deploy ${{ inputs.deploy_target }}
on: #trigger
  workflow_dispatch:
  push:
    branches:
      - 'development'
      - 'release/**'
      - 'master'
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package.json'
jobs:
  main:
    runs-on: "ubuntu-latest"
    environment:
      name: ${{ github.ref_name == 'master' && 'production' || contains(github.ref_name,'release/') && 'staging' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Github user
        uses: ./.github/actions/setup-github-user

      - name: Setup Node
        if: ${{ vars.ENV != 'development' }}
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Get Node version
        if: ${{ vars.ENV != 'development' }}
        id: node
        run: |
          echo "version=$(node -v)" >> "$GITHUB_OUTPUT"

      - name: Configure image tag
        run: |
          echo "tag=v$((${{ github.run_number }} + 100000))-build" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date)" >> $GITHUB_ENV
          sleep 5;

      - name: Build and run test
        uses: ./.github/actions/build-and-run-test

      - name: Bump version
        uses: ./.github/actions/bump-version
        with:
          environment: ${{ vars.ENV }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: |
            test-git/app:${{ env.tag }}
            test-git/app:latest

      - name: Create merge back PR
        uses: ./.github/actions/create-merge-back
        with:
          environment: ${{ vars.ENV }}